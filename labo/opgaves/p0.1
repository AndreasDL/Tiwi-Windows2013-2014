<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="generator" content="intranetr/0.10.0">
<title>Reeks 0 | iii intranet</title>    <link rel="stylesheet" type="text/css" media="screen,handheld" href="../../css/default.css?0.10.0">
    <link rel="stylesheet" type="text/css" media="print" href="../../css/print.css?0.10.0">
    <link rel="stylesheet" type="text/css" media="screen,handheld" href="../../css/sites/default.css">
    <script type="text/javascript" src="../../js/cache/0d6197553acf19ea859c96f7caf7d8fa6c6519b8.js?0.10.0"></script>
<!--[if lt IE 8]>
<link rel="stylesheet" type="text/css" href="/css/ie.css">
<![endif]-->
    <script type="text/javascript">
    (function() {
        var month = 8;
        iii.semester = month == 1 ? 1
            : month <= 6 ? 2
            : month <= 9 ? 0 : 1;
        if (iii.semester > 0) {
            var hideOtherSemester = function() {
                var other = iii.semester == 1 ? 2 : 1;
                $('#breadcrumbs li.group-sem'
                        + other
                        + ':not(.group-sem'
                        + iii.semester + '):not(.active)')
                    .hide();
            };
            $(document)
                .ready(hideOtherSemester)
                .on("contentUpdate.iii", hideOtherSemester);
        }
    })();
    </script>
</head>

<body>
    <div id="header"><h1>
    <a href="../../index.html" title="Naar de thuispagina">
        intranet
    </a>
</h1>
</div>
<div id="main">    <div id="node-children">
    <ul>
            <li><a href="index.html"><span style="float: right">&#8593;</span>Omhoog</a></li>
            </ul>
    </div>

<div id="content" class="">
        <div id="breadcrumbs-container">
    <span id="you-are-here">Je bent hier:</span>
    <ul id="breadcrumbs">
                            <li class="breadcrumb first"><a href="../../index.html" class="breadcrumb first">Intranet</a>
                </li>
                            <li class="breadcrumb"><a href="../index.html" class="breadcrumb">Windows</a>
                    <ul class="breadcrumb-siblings">
                                                <li class="separator"><span>Tweede bachelor</span></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem2"><a class="breadcrumb-sibling group-sem2" href="../../Besturingssystemen-I/index.html">Besturingssystemen I</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem1 leaf"><a class="breadcrumb-sibling group-sem1 leaf" href="../../Computernetwerken-I/index.html">Computernetwerken I</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem1"><a class="breadcrumb-sibling group-sem1" href="../../Informatica-II/index.html">Informatica II</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem2"><a class="breadcrumb-sibling group-sem2" href="../../Softwareontwikkeling-I/index.html">Softwareontwikkeling 1</a></li>
                                                                <li class="separator"><span>Derde bachelor</span></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem2"><a class="breadcrumb-sibling group-sem2" href="../../Algoritmen-I/index.html">Algoritmen I</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem2 leaf"><a class="breadcrumb-sibling group-sem2 leaf" href="../../Computergrafiek/index.html">Computergrafiek</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem1"><a class="breadcrumb-sibling group-sem1" href="../../Computernetwerken-II/index.html">Computernetwerken II</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem2"><a class="breadcrumb-sibling group-sem2" href="../../Computernetwerken-III/index.html">Computernetwerken III</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem1"><a class="breadcrumb-sibling group-sem1" href="../../Databanken/index.html">Databanken</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem1"><a class="breadcrumb-sibling group-sem1" href="../../Design-Patterns/index.html">Design Patterns</a></li>
                                                                                                                                                                                                                                                            <li class="breadcrumb-sibling group-sem1 group-sem2"><a class="breadcrumb-sibling group-sem1 group-sem2" href="../../Hardware/index.html">Hardware</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem2"><a class="breadcrumb-sibling group-sem2" href="../../OGP/index.html">OGP</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem1 leaf"><a class="breadcrumb-sibling group-sem1 leaf" href="../../Systeemanalyse-I/index.html">Systeemanalyse I</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem1"><a class="breadcrumb-sibling group-sem1" href="../../UNIX/index.html">UNIX</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem1"><a class="breadcrumb-sibling group-sem1" href="../../Beveiliging/index.html">Beveiliging</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem1"><a class="breadcrumb-sibling group-sem1" href="../../Computernetwerken-IV/index.html">Computernetwerken IV</a></li>
                                                                                                                                                                                                                                                            <li class="breadcrumb-sibling group-sem1 group-sem2 leaf"><a class="breadcrumb-sibling group-sem1 group-sem2 leaf" href="../../Masterproef/index.html">Masterproef</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem1 leaf"><a class="breadcrumb-sibling group-sem1 leaf" href="../../Systeemanalyse-II/index.html">Systeemanalyse II</a></li>
                                                                                                                                                                                                                <li class="breadcrumb-sibling group-sem1 active"><a class="breadcrumb-sibling group-sem1 active" href="../index.html">Windows</a></li>
                                                                <li class="separator"><span>Algemeen</span></li>
                                                                                                                                                                    <li class="breadcrumb-sibling leaf"><a class="breadcrumb-sibling leaf" href="../../Activiteiten/index.html">Activiteiten</a></li>
                                                                                                                                                                    <li class="breadcrumb-sibling leaf"><a class="breadcrumb-sibling leaf" href="../../Huisregels-labos/index.html">Huisregels voor labo&#039;s</a></li>
                                                                                                                                                                    <li class="breadcrumb-sibling leaf"><a class="breadcrumb-sibling leaf" href="../../Opleiding-Informatica/index.html">Opleiding Informatica GTI</a></li>
                                                                                                                                                                    <li class="breadcrumb-sibling leaf"><a class="breadcrumb-sibling leaf" href="../../Andere-problemen/index.html">Probleemoplossende instanties</a></li>
                                                                                                                                                                    <li class="breadcrumb-sibling"><a class="breadcrumb-sibling" href="../../Roosters/index.html">Roosters</a></li>
                                        </ul>
                </li>
                            <li class="breadcrumb"><a href="index.html" class="breadcrumb">Labo</a>
                    <ul class="breadcrumb-siblings">
                                                                                                                                                    <li class="breadcrumb-sibling active"><a class="breadcrumb-sibling active" href="index.html">Labo</a></li>
                                                                                                                                                                    <li class="breadcrumb-sibling leaf"><a class="breadcrumb-sibling leaf" href="../Theorie/index.html">Theorie</a></li>
                                        </ul>
                </li>
                            <li class="breadcrumb"><a href="p0.1" class="breadcrumb">Reeks 0</a>
                    <ul class="breadcrumb-siblings">
                                                                                                                                                    <li class="breadcrumb-sibling leaf active current"><a class="breadcrumb-sibling leaf active current" href="p0.1">Reeks 0</a></li>
                                                                                                                                                                    <li class="breadcrumb-sibling leaf"><a class="breadcrumb-sibling leaf" href="p1.1">Reeks 1</a></li>
                                                                                                                                                                    <li class="breadcrumb-sibling leaf"><a class="breadcrumb-sibling leaf" href="p2.1">Reeks 2</a></li>
                                                                                                                                                                    <li class="breadcrumb-sibling leaf"><a class="breadcrumb-sibling leaf" href="p3.1">Reeks 3</a></li>
                                                                                                                                                                    <li class="breadcrumb-sibling leaf"><a class="breadcrumb-sibling leaf" href="p4.1">Reeks 4</a></li>
                                                                                                                                                                    <li class="breadcrumb-sibling leaf"><a class="breadcrumb-sibling leaf" href="p5.1">Reeks 5</a></li>
                                                                                                                                                                    <li class="breadcrumb-sibling leaf"><a class="breadcrumb-sibling leaf" href="p6.1">Reeks 6</a></li>
                                                                                                                                                                    <li class="breadcrumb-sibling leaf"><a class="breadcrumb-sibling leaf" href="p7.1">Reeks 7</a></li>
                                                                                                                                                                    <li class="breadcrumb-sibling leaf"><a class="breadcrumb-sibling leaf" href="p8.1">Reeks 8</a></li>
                                        </ul>
                </li>
        </ul>
    </div>
    <h2>Reeks 0</h2>
    <div id="page-content">
        <h3>COM programmatie, Scripting Hosts en Engines</h3>
<dl class="compact">
<dt>1.</dt>
<dd>&nbsp;<strong><em>COM componenten en objecten</em></strong>
<p>Het is de bedoeling van de Windows labo's om te leren hoe de
meeste taken, die op een of andere manier verband houden met het
operating systeem, kunnen geautomatiseerd worden met behulp van
eenvoudige scripts. Deze scripts steunen in eerste instantie op de
mogelijkheid om externe <strong>Common Object Model</strong> (COM)
objecten aan te spreken. Dankzij het COM model beschikt om het even
welke toepassing (of operating systeem component) over een
standaard manier om haar functionaliteit ter beschikking te stellen
aan om het even welke andere toepassing. De toepassing die COM
objecten ter beschikking stelt wordt een <strong>COM
server</strong> genoemd, terwijl een toepassing die deze COM
objecten gebruikt een <strong>COM cliënt</strong> noemt. Zowel COM
servers als COM cliënts zijn taal-onafhankelijk: je kan zowel een
met VBScript ontwikkelde COM cliënt hebben die een met C++
ontwikkelde COM server aanspreekt, als omgekeerd. Bovendien kunnen
COM servers en COM cliënt op verschillende machines uitgevoerd
worden.</p>
<p>Een monolithische toepassing kan de aangeboden functionaliteit
opsplitsen in diverse logische eenheden, die we <strong>COM
componenten</strong> noemen. Een COM component is een container van
één of meerdere COM klassen. Deze opsplitsing laat toe om de
belasting te spreiden. De functionaliteit van elke COM component
wordt hetzij door een <strong>Dynamic Link Library</strong> (.dll),
hetzij door een executable programma (.exe) geïmplementeerd.</p>
</dd>
<dt>2.</dt>
<dd>&nbsp;<strong><em>COM-klassen registratie</em></strong>
<p>Wanneer men op een toestel een COM server installeert, worden in
de HKEY_CLASSES_ROOT hive van het register de verschillende klassen
die hij aanbiedt, <strong>geregistreerd</strong>. De
registratie-procedure van een COM component is afhankelijk van de
gekozen implementatie-methode:</p>
<ul>
<li>dll (Dynamic Link Library): gebruik
<strong>regsvr32.exe</strong> met als parameter de .dll
bestandsnaam.</li>
<li>exe (executable programma): roep de executable op met parameter
<strong>/regserver</strong></li>
</ul>
De registratie slaat uiteenlopende informatie op in verband met de
COM klassen, waarvan het grootste gedeelte gebruikt wordt om COM
objecten te activeren. Van zodra een COM server geregistreerd is
kan om het even welke COM cliënt gebruik maken van de aangeboden
objecten.
<p>Je kan het register bekijken met de commando's
<strong>regedit</strong> of <strong>regedt32</strong> (vanaf
Windows Server 2003 roepen deze hetzelfde programma op). In de
<strong>HKEY_CLASSES_ROOT</strong> hive vind je een alfabetisch
overzicht van alle klassen. Voor elke klasse wordt een
afzonderlijke subtak in het register gecreëerd, met als
identificatie de <strong>Programmatic Identifier</strong>, afgekort
<strong>ProgID</strong>. De ProgID vervult een belangrijke rol als
brug naar de buitenwereld: een COM cliënt vraagt een COM object
door het opgeven van het ProgID.<br>
Zoek in het register de klassen die <em>Excel</em> aanbiedt,
waaronder de klasse <strong>Excel.Sheet</strong> (in meer dan 1
versie). Zoek ook de klasse <strong>CDO.Message</strong>. De
registertak van elke klasse bevat een subtak <strong><a class=
"popout" href="p0/offaut4.gif">CLSID</a></strong>, die een element
bevat met als waarde de <strong><a class="popout" href=
"p0/offaut4.gif">GUID</a></strong>, een 16-byte hexadecimale string
die de klasse uniek identificeert. Zoek de <strong>GUID</strong> op
van de klassen <strong>Excel.Sheet</strong> en
<strong>CDO.Message</strong>.</p>
<p>De <strong>CLSID</strong> tak van de HKEY_CLASSES_ROOT hive
bevat een subtak voor elke GUID.<br>
Bij een <strong>64bit</strong> systeem, is de situatie wat
complexer. Er is namelijk een tweede <strong>CLSID</strong> tak,
onder de tak <strong>WOW6432Node</strong>, daar vind je een subtak
voor elke GUID die als <strong>32bit</strong> werd
geïnstalleerd.</p>
<p>In die GUID-subtak staat verschillende informatie. De subtak
<strong>ProgID</strong> bevat het juiste ProgID van de klasse.
Bepaalde informatie is afhankelijk van de gekozen
implementatie-methode:</p>
<ul>
<li>dll : <strong>InprocServer32</strong> verwijst naar de
bijhorende .dll, zoals bij de klasse
<strong>CDO.Message</strong></li>
<li>exe : <strong>LocalServer32</strong> verwijst naar de
bijhorende .exe, zoals bij de klasse
<strong>Excel.Sheet</strong></li>
</ul>
Zoek deze informatie op in het register.
<p>Wanneer een COM cliënt een COM object van een bepaalde klasse
aanmaakt, wordt nagegaan of de bijhorende .exe of .dll reeds
geladen is. Indien dit nog niet is geladen, roept de COM api de
noodzakelijke procedures op van de COM server om het object te
creëren, afhankelijk van de gekozen implementatie-methode:</p>
<ul>
<li>dll : het laden van de .dll gebeurt in de context van het
huidige proces. De corresponderende objecten noemt men
<strong>in-process</strong> of <strong>in-proc</strong>
servers.</li>
<li>exe : indien de toepassing nog niet geladen is, wordt ze
geladen in een nieuw proces, men noemt dit een
<strong>out-of-process server</strong>. Dit gebeurt echter in een
speciale mode, de <strong>Embedded</strong> of <strong>Server
mode</strong>, die geen vensters op de desktop creëert, en
bijgevolg onzichtbaar is voor de gebruiker. Wanneer het object
correct verwijderd wordt, wordt in dit geval ook de COM server
afgesloten. Indien een fout optreedt in het script, wordt het
proces meestal niet correct afgesloten!</li>
</ul>
<p><a class="popout" href="p0/02.pl">voorbeeld</a></p>
</dd>
<dt>3.</dt>
<dd>&nbsp;<strong><em>Type Libraries</em></strong>
<p>Een COM <strong>type library</strong> is een databank met de
beschrijving van een of meerdere COM objecten. Zowel de beschikbare
interfaces, attributen en methodes (en hun argumenten en
terugkeerwaarde), als data types en symbolische constanten kunnen
in de type library opgenomen worden. Type libraries kunnen zowel in
de binaire code van de COM server zelf <em>embedded</em> worden
(als <em>resource</em>), als opgenomen worden in stand-alone
bestanden, met .tlb of .olb extentie. Type libraries worden uniek
geïdentificeerd met een GUID.</p>
<p>Verschillende ontwikkelingsomgevingen laten toe om, op basis van
de informatie vervat in de type libraries, te browsen door alle
componenten en objecten die op een computersysteem geïnstalleerd
zijn, en om informatie te bekomen over hun GUID, IID's, attributen
en methodes. In Visual Basic en Office kun je bijvoorbeeld gebruik
maken van de <a class="popout" href="p0/offaut2.gif"><strong>Object
Browser</strong></a>. Een alternatief is de <a class="popout" href=
"p0/offaut3.gif"><strong>OLE/COM Object Viewer</strong></a>, die je
kan oproepen met <strong>oleview.exe</strong> (geïnstalleerd op de
labo-toestellen), thuis te <a href=
"http://www.microsoft.com/downloads/details.aspx?FamilyID=9d467a69-57ff-4ae7-96ee-b18c4790cffd&amp;DisplayLang=en">
downloaden</a>&nbsp;.</p>
<p>Open <strong>Oleview</strong> - in de sectie <em>Type
Libraries</em> staan alle beschikbare bibliotheken geordend op
naam, er is geen zoekfunctie. Zoek de type-library van Excel - je
vindt de naam van de bibliotheek (eventueel van meerdere versies)
en ook de unieke GUID. Indien je nu <em>dubbelklikt</em> - in de
linkerkolom - op de gevonden <em>type library</em> dan kan je de
interfaces en de symbolische constanten doorbladeren. Zoek de groep
symbolische constanten "XlVAlign" die 5 constanten bevat die we in
reeks2 zullen nodig hebben.</p>
<p>In het register vind je voor bepaalde COM-klassen ook de
bijhorende <strong>Type Library</strong>. Zoek of je in de
<strong>CLSID subtab</strong> een verwijzing vindt naar
<strong>TypeLib</strong>. Soms word je doorverwezen naar een andere
COM-klasse voor deze informatie. Soms ontbreekt deze subtak, maar
is er wel een Type Lybrary bij die COM-klasse.</p>
<p>Zoek de GUID op van de Type Libraries die horen bij de
COM-klassen <strong>Excel.Sheet.5</strong> en
<strong>CDO.Message</strong>. Je vindt hier, jammer genoeg, niet de
naam van de bibliotheek...</p>
<p><a class="popout" href="p0/03.pl">voorbeeld</a></p>
</dd>
<dt>4.</dt>
<dd>&nbsp;<strong><em>Object hiërarchieën</em></strong>
<p>Praktisch de volledige Windows Server functionaliteit, en ook
zeer veel commerciële toepassingen, volgen het COM model. Uiteraard
is het de COM server die de naamgeving van zijn klassen, en de
methoden en attributen die ze vervatten, bepaalt. Om met een COM
model te kunnen werken (welke klassen, attributen, methodes ? ...)
is het belangrijk dat je documentatie kan raadplegen. Uiteraard kan
je op het internet heel veel informatie bekomen, maar de COM
modellen die in deze labo's aan bod komen worden allemaal
gedocumenteerd in de <strong>MSDN Library</strong> van Visual
Studio 2008. Op de labo-toestellen staat deze reeds geïnstalleerd.
Deze documentatie, die off-line is, mag je ook gebruiken tijdens de
oefeningentesten. Leer dus om informatie snel op te zoeken !! Er is
ook een on-line versie (o.a. geïntegreerd in Visual Studio 2010),
maar die is anders gestructureerd en kan je niet gebruiken op de
testen. Interessante takken met informatie zullen regelmatig
vermeld worden, en worden samengevat in <a href=
"references.html">dit overzicht</a>, dat je mag gebruiken bij de
testen.</p>
<p>De meeste COM objecten bevatten methoden of attributen die
andere objecten of collecties (=verzameling van objecten) creëren.
De methodes en attributen van deze nieuwe objecten kunnen op hun
beurt weer andere objecten creëren, ..., en zo verder. Door een COM
object te initialiseren beschikt men dus over een hele structuur
van verwante objecten. Het geheel van objecten noemt men een
<strong>object hiërarchie</strong>. Een object hiërarchie start
doorgaans met een object op basisniveau, en omvat objecten die meer
specifieke aspecten van de toepassing of van het operating systeem
omschrijven. Op elk niveau van de hiërarchie bevatten de objecten
zowel attributen en methodes om de koppeling te maken met objecten
lager in de hiërarchie, als attributen en methodes om de specifieke
informatie op dat niveau aan te spreken.</p>
</dd>
<dt>5.</dt>
<dd>&nbsp;<strong><em>Object Interfaces</em></strong>
<p>Alle objecten hebben één of meer <a class="popout" href=
"p0/adp0306.gif"><strong>interfaces</strong></a>. Een COM interface
wordt geconstrueerd als een pointer naar een tabel, de
<strong>virtual function table</strong> of <strong>vtable</strong>,
van pointers, die elk verwijzen naar een functie in de
implementatie van een attribuut of van een methode. Voor elk
attribuut van een klasse zijn er meestal twee functies in de
vtable: één die de waarde ervan weergeeft (bijvoorbeeld
get_<em>attribuut</em>), en één die de waarde kan wijzigen
(bijvoorbeeld put_<em>attribuut</em>). De gezamenlijke interfaces
definiëren de mogelijke communicatie tussen COM cliënt en COM
object: een interface definieert een aantal attributen en methodes,
hun parameters en terugkeerwaarden. Elke interface is gekenmerkt
door een <strong>Global Unique Identifier</strong> (GUID), die men
de <strong>Interface Identifier</strong> (IID) noemt. COM gebruikt
GUID's om conflicten te vermijden tussen interfaces met eenzelfde
naam. Om de <strong>backward compatibiliteit</strong> van COM
componenten te verzekeren, mogen de specificaties van interfaces
niet gewijzigd worden, eens de component verspreid is. Indien men
toch de parameters van een bestaande method, of aanvullende
attributen en methodes wil invoeren, moet dit gebeuren door de oude
interface te behouden, en de <a class="popout" href=
"p0/adp0307.gif">nieuwe functionaliteit</a> te implementeren in een
aanvullende interface. Veel ProgID's bevatten dan ook een
versienummer. Klassen met ProgID's, die enkel in het versienummer
verschillen, vertonen meestal wel hetzelfde CLSID, wat erop wijst
dat ze door dezelfde COM server geïmplementeerd worden. Indien
ProgID's voorkomen met versienummers, is er ook steeds een
corresponderend ProgID zonder vermelding van het versienummer. In
de registertak van dit ProgID staat er dan een
<strong>CurVer</strong> registersleutel, die verwijst naar de meest
recente ProgID. Vanuit applicaties hoef je bijgevolg zelden te
refereren naar klassen met een expliciete versie specificatie.</p>
<p>Een interface heeft traditioneel een naam die start met de
hoofdletter&nbsp;I. Elk COM object moet een
<strong>IUnknown</strong> interface voorzien. In <a class="popout"
href="p0/adp0307.gif">diagramma's</a> die een COM object symboliseren,
tekent men deze interface traditioneel aan de bovenzijde van het
COM object. IUnknown implementeert drie methodes:</p>
<ul>
<li><strong>QueryInterface</strong> wordt gebruikt om uit te vissen
of het object ook andere interfaces bezit,</li>
<li>telkens één of andere COM cliënt een referentie naar een
specifiek object verkrijgt, wordt voor dit object een
referentieteller verhoogd door middel van de
<strong>AddRef</strong> method,</li>
<li>wanneer de referentieteller, na eventueel herhaalde oproepen
van de <strong>Release</strong> method, uiteindelijk weer de waarde
nul bereikt (en er bijgevolg geen enkele COM cliënt nog langer naar
refereert), verwijdert het object zichzelf uit het geheugen.</li>
</ul>
</dd>
<dt>6.</dt>
<dd>&nbsp;<strong><em>OLE Automation en Binding</em></strong>
<p>Opdat een COM cliënt een object zou kunnen gebruiken, moet de
toepassing eerst intern informatie over het object opslaan. Men
noemt dit het <strong>binden</strong> van het object. De meest
efficiënte manier hiervoor wordt <strong>tijdens
compilatie</strong> van de COM cliënt uitgevoerd en daarom
<strong>early binding</strong> of <strong>vtable binding</strong>
genoemd. Early binding is zeer snel: tijdens compilatie wordt
eenmalig het adres van de implementerende functie uit de vtable
gehaald, en in de binaire programmacode opgeslagen. Tijdens
uitvoering wordt er hierdoor nagenoeg geen verschil gemerkt tussen
uitvoering van een gewone functie, en een functie die een attribuut
of methode van een COM object verwezenlijkt. Early binding laat,
dankzij <strong>type libraries</strong> (zie reeks&nbsp;2), ook
syntax checking van de argumenten toe. Anderzijds reserveert early
binding sowieso geheugen voor de structuur van het object,
onafhankelijk of het object tijdens effectieve uitvoering gebruikt
wordt of niet. Early binding is niet beschikbaar in
geïnterpreteerde omgevingen. Het ontwikkelen van een eenvoudige COM
cliënt, die van early binding gebruik moet maken, bijvoorbeeld in
C++, is <a class="popout" href="p0/agentcpp.txt">niet voor iedereen
triviaal</a>&nbsp;! Om een nieuw object te creëren moet het
programma zelf, via de <strong>CoCreateInstance</strong> COM
functie, verwijzen naar de CLSID van de COM klasse en de IID van de
specifieke interface. Om te refereren naar een bestaand object kan
een C++ programma gebruik maken van de <strong>CoGetObject</strong>
COM functie. Het programma moet bovendien zelf de
<strong>Release</strong> functie van de interface oproepen, om
ervoor te zorgen dat het object zichzelf na gebruik opruimt. De
geïnteresseerden in de <strong>Microsoft Agent Control</strong> COM
server, waarvan het <a class="popout" href=
"p0/agentcpp.txt">voorbeeld</a> gebruik maakt, kunnen best de <a href=
"p0/msagent.chm">msagent.chm</a> en <a href=
"p0/msagent.chi">msagent.chi</a> helpbestanden downloaden om het
overeenkomstige <a class="popout" href="p0/msagent.gif">object
model</a> te bestuderen. Dit wordt niet verder behandeld in deze
labo's.</p>
<p>We beperken ons tot de <strong>late binding</strong>, waarbij de
binding tussen de COM cliënt en het object slechts wordt
verwezenlijkt tijdens uitvoering van de COM cliënt. De binding
gebeurt op basis van de ProgID, andere details van het object
moeten hierdoor niet a&nbsp;priori gekend zijn. De COM cliënt moet
zich niets aantrekken van het bestaan van (diverse) interfaces.
Hierdoor is het programmeren van een <a class="popout" href=
"p0/agentvbs.txt">script versie</a> van een COM cliënt een stuk
eenvoudiger.<br>
<strong>Maar...</strong> late binding is enkel mogelijk indien voor
het COM object ook de optionele interface <strong><a class="popout"
href="p0/offaut5.gif">IDispatch</a></strong> aanwezig is. Deze moet
vier methodes implementeren:</p>
<ul>
<li><strong>GetTypeInfo</strong> en
<strong>GetTypeInfoCount</strong> kunnen gebruikt worden om de
methodes en attributen van een object af te scannen,</li>
<li>de <strong>GetIDsOfNames</strong> methode wordt gebruikt om op
basis van de naam van een attribuut of methode een numerieke
identificatie, de <strong>dispatch ID</strong> of
<strong>DispID</strong>, van de implementerende functie te
bekomen,</li>
<li>de <strong>Invoke</strong> methode voert een implementerende
functie uit op basis van de dispatch ID.</li>
</ul>
Objecten met de IDispatch interface worden <strong>automation
objecten</strong> genoemd en laten <strong>late binding</strong>
toe. Late binding is echter traag: telkens <strong>bij
uitvoering</strong> een attribuut of methode van het object
aangesproken wordt, moet eerst de GetIDsOfNames en vervolgens de
Invoke functie van de IDispatch interface uitgevoerd worden. Indien
methodes van objecten foutief aangesproken worden, kan dit
bovendien enkel bij uitvoering gedetecteerd worden.
<p>Geïnterpreteerde talen ondersteunen enkel late binding, en
bijgevolg enkel COM objecten met een automation interface. De
meeste COM objecten ondersteunen een <a class="popout" href=
"p0/offaut6.gif">duale interface</a> en stellen hun functies zowel
onrechtstreeks via de IDispatch interface als rechtstreeks via de
vtable ter beschikking. Hierdoor kunnen deze zowel op een snelle
manier aangesproken worden door toepassingen die early binding
ondersteunen, als door geïnterpreteerde omgevingen.</p>
</dd>
<dt>7.</dt>
<dd>&nbsp;<strong><em>COM technologieën met een automation
interface</em></strong>
<p>Componenten met een automation interface kunnen vanuit
geïnterpreteerde omgevingen gemanipuleerd worden. Ten opzichte van
gecompileerde programma's vertonen scripts belangrijke nadelen:</p>
<ul>
<li>de uitvoering van scripts is veel trager.</li>
<li>scripts zijn minder goed beschermd tegen piraterij. Ze kunnen
(meestal) gekopieerd en gewijzigd worden door iedereen die de
scripts moeten kunnen uitvoeren. Recente aanvullingen zoals
<strong>script encoding</strong> laten toe om de intellectuele
eigendom van de programmeur beter te beschermen.</li>
<li>syntax fouten worden pas in een veel later stadium
ontdekt.</li>
</ul>
Toch zijn er ook heel wat voordelen:
<ul>
<li>scriptomgevingen vormen voor veel mensen (zelfs voor
professionele programmeurs) een minder hoge moeilijkheidsdrempel,
waardoor ook voor hen het volledige beheer van COM objecten met
automation interface uitvoerbaar wordt</li>
<li>het ontwikkelen van scripts vergt geen complexe
ontwikkelingsomgeving, die reeds op zich dikwijls moeilijk te
configureren en aan te leren is</li>
<li>scripts zijn uitermate geschikt voor een snelle,
geautomatiseerde oplossing van kleine problemen en taken</li>
<li>dankzij markup talen zoals HTML en XML is men niet aangewezen
op één enkele programmeertaal, maar kunnen scripts in verschillende
talen gecombineerd worden tot een oplossing in tekst formaat, die
bovendien het voordeel biedt om door om het even welke web browser
gedownload te kunnen worden</li>
</ul>
De meeste objectmodellen van Microsoft software (zowel van
operating systeem componenten, als van toepassingen), voorzien in
een automation interface. Hieronder wordt een sumier overzicht
gegeven van de huidige technologieën met een automation interface.
Een aantal onder hen komen in de volgende reeksen meer uitgebreid
aan bod:
<ul>
<li>De <strong>Windows Management Instrumentation</strong> (WMI)
technologie is een implementatie van een ruimere standaard,
<strong>Web Based Enterprise Management</strong> (WBEM) genoemd.
WMI kan nagenoeg alle resources van een Windows Server computer
beheren: het operating systeem zelf, hardware en device drivers, de
BIOS, het register, security informatie en het bestandssysteem. Met
een paar lijnen WMI code kun je <a class="popout" href=
"p0/wmi_ps.txt"><strong>bijvoorbeeld</strong></a> een overzicht
bekomen van alle processen, en hun Process Identifier. We bespreken
het object model van WMI in deze labo's (reeksen&nbsp;3 en&nbsp;4).
Dit model kan zelfs programmatisch uitgebreid worden, maar dit
aspect zal niet aan bod komen in de labo's.</li>
<li>De <strong>ActiveX Data Objects</strong> (ADO) specificatie
voorziet in een verzameling objecten die generieke toegang mogelijk
maken tot een hele reeks locale en remote databanken (ondermeer
e-mail repositories en relationele databank omgevingen zoals
<strong>Access</strong>, <strong>Oracle</strong> en <strong>SQL
Server</strong>)</li>
<li>Het <strong>Collaboration Data Objects</strong> (CDO) object
model laat scripts toe te interageren met mail servers, zoals
<strong>Exchange</strong>. Hierdoor kan men bijvoorbeeld
programmatisch mailboxen aanmaken en e-mail versturen. We zullen in
de volgende reeks een eerste voorbeeld met dit COM - model
uitwerken.</li>
<li>Alle componenten van recente <strong>Office</strong> suites
(Office&nbsp;97, Office&nbsp;20xx) kunnen volledig door scripts
gestuurd worden. In reeks&nbsp;2 zullen we ter illustratie hiervan
een oefening maken gebaseerd op het Excel&nbsp; object model.</li>
<li><strong>Internet Explorer</strong> is volledig beheersbaar
vanuit scripts, en laat ondermeer toe om actieve pagina's te
ontwikkelen waarin cliënt-side scripts uitgevoerd worden.
Cliënt-side scripts genereren de output dynamisch en interageren
met de gebruiker. </li>
<li>De <strong>Active Directory Services Interface</strong> (ADSI)
biedt COM toegang, zowel tot de volledige Active Directory van een
Windows Server domein, als tot de gebruikersdatabank van een NT
domein of de lokale gebruikersdatabanken van individuele NT en
Windows toestellen. ADSI wordt in deze labo's uitvoerig behandeld
in reeksen&nbsp;6-8.</li>
</ul>
</dd>
<dt>8.</dt>
<dd>&nbsp;<strong><em>ActiveX Scripting</em></strong>
<p>Om toe te laten deze verschillende technologieën zowel vanuit
verschillende toepassingen als met behulp van diverse scripttalen
aan te kunnen spreken, voorziet de <a class="popout" href=
"p0/f02ge01.gif"><strong>ActiveX Scripting</strong></a> architectuur
in een stricte scheiding tussen <em>script hosts</em> en <em>script
engines</em>. De <strong>script engines</strong> ondersteunen de
feitelijke programmeertaal, terwijl de <strong>script
hosts</strong> de interface vormen tussen deze taal en een
willekeurige toepassing die ervan gebruik wil maken. De script host
zorgt ervoor dat een script instructie per instructie gelezen en
uitgevoerd wordt. De ActiveX Scripting architectuur maakt het
mogelijk dat om het even welke script host kan gecombineerd worden
met om het even welke script engine.</p>
<p>Voorbeelden van populaire script engines zijn VBScript, JScript,
<strong>PerlScript</strong>, Python en Tcl. In deze labo's wordt
geopteerd voor PerlScript. <strong>PerlScript</strong>,
geïmplementeerd door perlSE.dll, is een goed voorbeeld van een
<em>ActiveX scripting engine</em>, die kan gebruikt worden in
combinatie met om het even welke andere <em>ActiveX scripting
host</em>. Omdat de meeste voorbeelden in de <strong>MSDN
Library</strong> geschreven zijn in VBScript, zal ook de syntax van
VBScript kort besproken worden.</p>
<p>Om het even welke script host kan optreden als COM cliënt.
Voorbeelden van belangrijke scripting hosts zijn</p>
<ul>
<li>de <strong>Windows Scripting Host</strong> (<a class="popout"
href="p0/sas_wsh_07c.gif"><strong>WSH</strong></a>)</li>
<li><strong>Perl</strong> kan als host fungeren, maar dan wel enkel
met <strong>Perlscript</strong> als engine,</li>
<li>de <strong>Active Server Pages</strong> (ASP) technologie, die
hetzij Internet Information Server (IIS), hetzij een Personal Web
Server (PWS) vereist,</li>
<li>de <strong>Internet Explorer</strong> web browser,</li>
<li>Microsoft <strong>Office</strong> toepassingen,</li>
<li>zelf ontwikkelde <strong>Windows Script
Components</strong>.</li>
</ul>
<p>In de labo's gebruiken we enkel de mogelijkheid om COM-objecten
te gebruiken vanuit <strong>perl</strong>. Hierbij is perl.exe
eigenlijk terzelfdertijd (<em>monolitisch</em>) de host en de
engine. </p>
</dd>
</dl>

        <div id="page-content-end"></div>
    </div>
    <div id="footer">    <div id="metadata">
    Laatst gewijzigd
            op
        24-09-2013
        om
        14:55
        
                door
                    <a href="mailto:Marleen.Denert@UGent.be">Marleen Denert</a>
                
        
    </div>
<div id="tag">intranetr/0.10.0</div>
<div id="footer-end"></div>
</div>
</div>
</div>
</body>

</html>

<!-- 93 ms / 608 KB -->
